<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@ViewBag.Title - My ASP.NET Application</title>
    <link rel="preconnect" href="https://fonts.gstatic.com">
    <link href="https://fonts.googleapis.com/css2?family=Lato:wght@400;700&display=swap" rel="stylesheet">
    @Styles.Render("~/Content/css")
    @Scripts.Render("~/bundles/modernizr")

</head>
<body>
    <div class="navbar navbar-inverse navbar-fixed-top">
        <div class="container">
            <div class="navbar-header">
                <button type="button" class="navbar-toggle" data-toggle="collapse" data-target=".navbar-collapse">
                    <span class="icon-bar"></span>
                    <span class="icon-bar"></span>
                    <span class="icon-bar"></span>
                </button>
                @Html.ActionLink("GigHub", "Index", "Home", new { area = "" }, new { @class = "navbar-brand" })
            </div>
            <div class="navbar-collapse collapse">
                <ul class="nav navbar-nav">
                    <li>@Html.ActionLink("Add a gig", "Create", "Gigs")</li>
                </ul>
                @Html.Partial("_LoginPartial")
            </div>
        </div>
    </div>
    <div class="container body-content">
        @RenderBody()
        <hr />
        <footer>
            <p>&copy; @DateTime.Now.Year - My ASP.NET Application</p>
        </footer>
    </div>

    @Scripts.Render("~/bundles/lib")
    @RenderSection("scripts", required: false)

    <script type="text/x-template" id="notifications-template">
        <ul class="notifications">
            <%
                _.each(notifications , function(notification){
                    if(notification.type == 1){%>
                        <li>
                            <span class="highlight"><%= notification.gig.artist.name %> </span> cancels that gig at <%= notification.gig.venue %> at <%= moment(notification.gig.dateTime).format('D MMM  HH:mm') %>
                        </li>
                    <%}
                    else if(notificaiton.type == 2){
                        var changes = [],
                            originalValues = [],
                            newValues = []
                            
                            if(notification.originalvenue != notification.gig.venue){
                                
                                changes.push('venue');
                                originalValues.push(notification.originalVenue);
                                newValues.push(notification.gig.venue);
                            }
                            
                            if(notification.originaldatetime != notification.gig.datetime){
                                
                                changes.push('date/time');
                                originalValues.push(moment(notification.originaldatetime).format('D MMM HH:mm'));
                                newValues.push(moment(notification.gig.dateTime).format('D MMM  HH:mm'));
                            }
                       %> 
                            <li>
                                <span class="highlight"> <%= notification.gig.artist.name %> </span> changes <%= changes.join(' and ') %> of the gig from <%= originalValues.join('/') %> to <%= newValues.join('/') %> 
                            </li>
                    <%}
                    else {%>
                        <li>
                            <span class="highlight"> <%= notification.gig.artist.name %> </span> create a new gig at <%= notification.gig.venue %> at <%= moment(notification.gig.dateTime).format('D MMM  HH:mm') %>
                        </li>
                    <%}
                });
            %>
        </ul>
    </script>

    <script>
        $(document).ready(function () {
            $.getJSON("/Api/Notifications", function (notifications) {

                if (notifications == 0)
                    return;

                $(".js-notifications-count") 
                    .text(notifications.length)
                    .removeClass("hide")
                    .addClass("animated bounceInDown");

                $(".notifications").popover({
                    html: true,                   // this is what the popover will return,it will return an html or markup so we set it as true
                    title: "Notifications",
                    content: function () {
                        var compiled = _.template($("#notifications-template").html());    //using underscore.js library (Templeting Engine) to get a markup from an api
                        return  compiled({ notifications: notifications });
                    },
                    placement: "bottom",
                    template:'<div class="popover popover-notifications" role="tooltip"><div class="arrow"></div><h3 class="popover-title"></h3><div class="popover-content"></div></div>'
                }).on("shown.bs.popover", function () {
                    $.post("Api/Notifications/MarkAsRead")
                        .done(function () {
                            $(".js-notifications-count")
                                .text("")
                                .addClass("hide");
                        });
                });
            });

            
        });

    </script>
</body>
</html>
